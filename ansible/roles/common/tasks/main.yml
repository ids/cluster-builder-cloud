---
- name: determine base control-builder path
  set_fact:
    cluster_builder_dir: "{{ playbook_dir | replace('/ansible', '') }}"
  when: cluster_pkg_folder is undefined
  run_once: true

- debug: var=cluster_builder_dir
  when: cluster_pkg_folder is undefined
  run_once: true

- name: determine cluster_pkg_folder
  set_fact:
    cluster_pkg_folder: "{{ inventory_dir | replace(cluster_builder_dir + '/clusters/', '') }}"
  when: cluster_pkg_folder is undefined
  run_once: true

- debug: var=cluster_pkg_folder
  run_once: true

- name: set default platform to linux
  set_fact:
    platform: "linux"
  run_once: true

- name: determine if platform is macOS
  local_action:
    module: shell
    _raw_params: "uname -ra | grep Darwin | wc -l | xargs"
  become: false
  run_once: true
  register: platform_is_darwin
    
- name: set platform fact when macOS
  set_fact:
    platform: "darwin"
  when: platform_is_darwin.stdout == "1"
  run_once: true

- name: determine if platform is Windows
  local_action:
    module: shell
    _raw_params: "uname -ra | grep Microsoft | wc -l | xargs"
  become: false
  run_once: true
  register: platform_is_windows
    
- name: set platform fact when Windows
  set_fact:
    platform: "windows"
  when: platform_is_windows.stdout == "1"
  run_once: true

- name: platform
  debug: var=platform
  run_once: true

- name: set k8s_workloads_on_master default
  set_fact:
    k8s_workloads_on_master: false
  when: k8s_workloads_on_master is undefined
  run_once: true

- name: k8s_workloads_on_master
  debug: var=k8s_workloads_on_master
  run_once: true
