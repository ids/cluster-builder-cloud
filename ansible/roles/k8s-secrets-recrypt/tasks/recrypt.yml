- name: Check that the secrets.conf exists
  stat:
    path: /etc/kubernetes/pki/secrets.conf
  register: stat_result

- name: set secrets_encrypted fact
  set_fact:
    secrets_encrypted: "{{ stat_result.stat.exists }}"

- name: adjust kubernetes api server configuration for encryption
  lineinfile:
    dest: /etc/kubernetes/manifests/kube-apiserver.yaml
    insertafter: " - --secure-port=6443"
    line: "    - --encryption-provider-config=/etc/kubernetes/pki/secrets.conf"
    state: present
  become: true
  when: k8s_version is not search("1.12") and secrets_encrypted|bool == True

- name: adjust kubernetes api server configuration for encryption in legacy 1.12
  lineinfile:
    dest: /etc/kubernetes/manifests/kube-apiserver.yaml
    insertafter: " - --secure-port=6443"
    line: "    - --experimental-encryption-provider-config=/etc/kubernetes/pki/secrets.conf"
    state: present
  become: true
  when: k8s_version is search("1.12") and secrets_encrypted|bool == True

- name: wait for the api servers to restart
  pause:
    seconds: 25
  when: secrets_encrypted|bool == True and 
    inventory_hostname == groups['k8s_masters'][0] 

- name: validate the api is live again 
  shell: kubectl get pods -n kube-system
  become: true
  register: update_api_out
  when: secrets_encrypted|bool == True and 
    inventory_hostname == groups['k8s_masters'][0] 

- debug: msg="{{ update_api_out.stdout_lines }}"
  when: secrets_encrypted|bool == True and 
    inventory_hostname == groups['k8s_masters'][0] 

- name: update all the secrets 
  shell: kubectl get secrets --all-namespaces -o json | kubectl replace -f -
  become: true
  register: update_secrets_out
  when: secrets_encrypted|bool == True and 
    inventory_hostname == groups['k8s_masters'][0] 

- debug: msg="{{ update_secrets_out.stdout_lines }}"
  when: secrets_encrypted|bool == True and 
    inventory_hostname == groups['k8s_masters'][0] 
