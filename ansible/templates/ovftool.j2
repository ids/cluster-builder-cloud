#!/bin/bash 

OVA_TEMPLATE_PATH={{ ova_template_path }}
START_TIME=$SECONDS

# this here for experimental windows support
#if [ -f /mnt/vmware-tools/ovftool.exe ]; then
#  echo "Using ovftool.exe alias for Windows!"
#  shopt -s expand_aliases
#  alias ovftool=/mnt/vmware-tools/ovftool.exe
#  CPATH=/mnt/c/Users/`whoami`
#  USER_PATH=${PWD/$CPATH/''}
#  OVA_TEMPLATE_PATH="file://C:/Users/`whoami`$USER_PATH/{{ ova_template_path }}"
#  echo "Using OVA: ${OVA_TEMPLATE_PATH}"
#fi

{% if platform == "windows" %}
OVFTOOL_CMD=ovftool.exe
{% else %}
OVFTOOL_CMD=ovftool
{% endif %}

{% if ovftool_parallel|bool == True %}
  echo
  echo "Running all ovftool deployments in parallel..." 
  echo
  echo "> NOTE: the console output is going to get scrambled, but it will be much faster!"
  echo
{% endif %}

{% for host in groups['vmware_vms'] %}
  {% if hostvars[host].vcenter_server is defined  %}

read -r -d '' OVFCMD << EOM
${OVFTOOL_CMD} --powerOffTarget --memorySize:vm={{ hostvars[host].memsize }} \
    --numberOfCpus:vm={{ hostvars[host].numvcpus }} \
    --name="{{ hostvars[host].inventory_hostname }}" \
    --diskMode=thin \
    --powerOn \
    --disableVerification \
    --noSSLVerify \
    --allowExtraConfig \
    --datastore="{{ hostvars[host].esxi_ds }}" \
    --network="{{ hostvars[host].esxi_net }}" \
    $OVA_TEMPLATE_PATH \
    vi://{{ hostvars[host].vcenter_user }}:$1@{{ hostvars[host].vcenter_server }}/?ip={{ hostvars[host].esxi_host }}
EOM
  
  {% else %}

read -r -d '' OVFCMD << EOM
${OVFTOOL_CMD} --powerOffTarget --memorySize:vm={{ hostvars[host].memsize }} \
    {% if overwrite_existing_vms is defined  -%}
      --overwrite \
    {% endif %}
    --numberOfCpus:vm={{ hostvars[host].numvcpus }} \
    --name="{{ hostvars[host].inventory_hostname }}" \
    --diskMode=thin \
    --powerOn \
    --disableVerification \
    --allowExtraConfig \
    --noSSLVerify \
    --datastore="{{ hostvars[host].esxi_ds }}" \
    --network="{{ hostvars[host].esxi_net }}" \
    $OVA_TEMPLATE_PATH \
    vi://{{ hostvars[host].esxi_user }}:$1@{{ hostvars[host].esxi_host }}
EOM
        
  {% endif %}

  {% if ovftool_parallel|bool == True %}
    eval "${OVFCMD} &"
  {% else %}
    eval "${OVFCMD}"
  {% endif %}

  if [ $? -ne 0 ]; then
    echo "FAIL: ovftool deployment failed!"
    exit 1
  fi
        
{% endfor %}

{% if ovftool_parallel|bool == True %}
wait
{% endif %}

ELAPSED_TIME=$(($SECONDS - $START_TIME))
echo 
echo "OVFTool Deployment in: $(($ELAPSED_TIME/60)) min $(($ELAPSED_TIME%60)) sec" 
echo

